'''This program takes row and column of a matrix as user input and creates
an array and a matrix out of it. The elements of the array is generated by
the Fermat formula. Further, it asks the user to add additional row or column
or both to the exisiting matrix. The additional row or column is the sum of
all elements in the row or the column of the existing matrix.'''

import sys
mat = []


def errorhandle():
    '''This function is used for errorhandling in the increment() function'''
    print("Wrong Input! Try again?(y/n)")
    user = input()
    if user in ["y", "yes"]:
        main()
    else:
        print("goodbye!")
        sys.exit()


def error_in_matrixsize():
    '''This function is used for errorhandling in matrixsize() function'''
    print("We expected a number! Try again?(y/n)")
    user = input()
    if user in ["y", "yes"]:
        matrixsize()
    else:
        print("goodbye!")


def matrixsize():
    '''This function takes the size of a matrix as user input'''
    global A, B
    print("Enter the size of the row: ")
    A = input()
    if A.isdigit() is True:
        A = int(A)
        print("Enter the size of the column: ")
        B = input()
        if B.isdigit() is True:
            B = int(B)
            main()
        else:
            error_in_matrixsize()
    else:
        error_in_matrixsize()


def equation():
    '''This function create array(arr) and fill
        it by numbers generated by Fermat formula'''
    arr = []
    list_a = [*range(2, A+1)]
    list_b = [*range(1, B+1)]
    n = 0
    for a in list_a:
        for b in list_b:
            x_n = a**(2*n) + b**(2*n)
            n += 1
            arr.append(x_n)
    return arr


def createMatrix(rowCount, colCount, dataList):
    '''This function takes the array and convert
        it into matrix'''

    for i in range(rowCount):
        rowList = []
        for j in range(colCount):
            index = colCount * i + j
            if index < len(equation()):
                rowList.append(dataList[index])
            else:
                rowList.append(0*A)

        mat.append(rowList)

    return mat


def increment():
    '''This function is for adding additional row or column
        to the matrix'''
    print("1. Enter 1 for adding a row.")
    print("2. Enter 2 for adding a column.")
    print("3. Enter 3 for adding both simultaneously")
    usr = (input())
    if usr == "1":
        add = [sum(i) for i in mat]
        for z in range(A):
            mat[z].extend([add[z]])
        print(mat)
    elif usr == "2":
        add = [sum(i) for i in zip(*mat)]
        mat.append(add)
        print(mat)
    elif usr == "3":
        row = [sum(i) for i in mat]
        for z in range(A):
            mat[z].extend([row[z]])
        column = [sum(i) for i in zip(*mat)]
        mat.append(column)
        print(mat)
    else:
        errorhandle()


def main():
    '''This is the main function'''
    arr = equation()
    print("The array is: "+str(arr))
    mat = createMatrix(A, B, arr)
    print("The matrix is: "+str(mat))
    increment()
    while True:
        if tryanother() is True:
            tryanother()
        else:
            break


def tryanother():
    '''This function is asking to add one more additional row and
    column to the matrix.'''
    print("Do you want to add in the existing matrix?(y/n)")
    option = input()
    if option in ["yes", "y"]:
        main()
    else:
        print("bye!")
        return False


try:
    matrixsize()
except KeyboardInterrupt:
    print("Sorry! An interuption occured, Goodbye!")
